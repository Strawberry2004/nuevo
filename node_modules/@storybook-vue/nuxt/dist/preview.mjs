import { setup } from '@storybook/vue3';
import { createNuxtApp, applyPlugins } from 'nuxt/app';
import { getContext } from 'unctx';
import { $fetch } from 'ofetch';
import { runtimeConfig } from 'virtual:nuxt-runtime-config';
import '#build/css';
import plugins from '#build/plugins';

const pluginsTyped = plugins;
setup(async (vueApp, storyContext) => {
  const key = storyContext?.id;
  if (!key) {
    throw new Error("StoryContext is not provided");
  }
  const storyNuxtAppId = `nuxt-app-${key}`;
  const storyNuxtCtx = getContext(storyNuxtAppId);
  if (storyNuxtCtx.tryUse()) {
    return;
  }
  window.__NUXT__ = {
    serverRendered: false,
    config: {
      public: {},
      app: { baseURL: "/" },
      ...runtimeConfig
    },
    data: {},
    state: {}
  };
  if (!globalThis.$fetch) {
    globalThis.$fetch = $fetch.create({
      baseURL: "/"
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
    });
  }
  const nuxt = createNuxtApp({
    id: storyNuxtAppId,
    vueApp
  });
  storyNuxtCtx.set(nuxt, true);
  getContext("nuxt-app").set(nuxt, true);
  await applyPlugins(nuxt, pluginsTyped);
  await nuxt.hooks.callHook("app:created", vueApp);
  await nuxt.hooks.callHook("app:beforeMount", vueApp);
});
