import { PresetProperty, PreviewAnnotation } from '@storybook/types';
import { Nuxt } from '@nuxt/schema';
import { StorybookConfig } from './index.cjs';
import '@storybook/vue3';
import '@storybook/vue3-vite';
import '@storybook/builder-vite';

declare const core: PresetProperty<'core', StorybookConfig>;
interface Resolver {
    /**
     * Resolves the given path segments to an absolute path, using the provided base path.
     *
     * The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.
     *
     * @param path A sequence of paths or path segments.
     * @throws {TypeError} if any of the arguments is not a string.
     */
    resolve(...path: string[]): string;
    /**
     * Asynchronously resolves a module path to a local file path, using the provided base path.
     *
     * @param id - The identifier or path of the module to resolve.
     * @returns A promise to resolve to the file path, or `null` if the module could not be resolved.
     */
    resolveModule(id: string, options?: {
        paths?: string[];
    }): Promise<string | null>;
}
/**
 * This is needed to correctly load the `preview.js` file,
 * see https://github.com/storybookjs/storybook/blob/main/docs/contribute/framework.md#4-author-the-framework-itself
 */
declare const previewAnnotations: (entry?: PreviewAnnotation[]) => Promise<PreviewAnnotation[]>;
declare const viteFinal: StorybookConfig['viteFinal'];
declare function getNuxtProxyConfig(nuxt: Nuxt): {
    port: any;
    route: string;
    proxy: {
        "^/(_nuxt|_ipx|_icon|__nuxt_devtools__)": {
            target: string;
            changeOrigin: boolean;
            secure: boolean;
            ws: boolean;
        };
    };
};

export { type Resolver, core, getNuxtProxyConfig, previewAnnotations, viteFinal };
